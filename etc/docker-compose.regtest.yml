#name: 'reth'

services:
  reth:
    container_name: reth
    restart: unless-stopped
    image: ghcr.io/paradigmxyz/reth
    ports:
      - '9001:9001' # metrics
      - '30303:30303' # eth/66 peering
      - '8545:8545' # rpc
      - '8456:8456' # ws
      - '8551:8551' # engine
    volumes:
      - ./data/execution/logs:/opt/alys/execution/logs
      - ./data/execution/node:/opt/alys/execution/data
      - ./config:/opt/alys/execution/config
      - ./jwttoken:/opt/alys/execution/config/jwt:ro
    # https://paradigmxyz.github.io/reth/run/troubleshooting.html#concurrent-database-access-error-using-containersdocker
    pid: host
    # For Sepolia, replace `--chain mainnet` with `--chain sepolia`
    # For Holesky, replace `--chain mainnet` with `--chain holesky`
    command: > 
        node
        --chain "opt/alys/execution/config/genesis.json"
        --log.file.directory /opt/alys/execution/logs
        --datadir "/opt/alys/execution/data"
        --config "opt/alys/execution/config/eth-config.toml"
        --metrics 0.0.0.0:9001
        --authrpc.addr 0.0.0.0
        --authrpc.port 8551
        --authrpc.jwtsecret /opt/alys/execution/config/jwt/jwt.hex
        --http --http.addr 0.0.0.0 --http.port 8545
        --http.api "debug,net,eth,web3,txpool"
        --http.corsdomain "*"
        --ws.api "eth,net,web3,debug,txpool"
        --ws
        --ws.addr "0.0.0.0"
        --ws.port 8456
        --ws.origins "*"
        --port 30303
        

  prometheus:
    container_name: prometheus
    restart: unless-stopped
    image: prom/prometheus
    depends_on:
      - reth
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheusdata:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus

  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana:10.3.3
    depends_on:
      - reth
      - prometheus
    ports:
      - 3003:3000
    environment:
      PROMETHEUS_URL: http://prometheus:9090
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning_temp/dashboards
    # 1. Copy dashboards from temp directory to prevent modifying original host files
    # 2. Replace Prometheus datasource placeholder with the actual name
    # 3. Run Grafana
    entrypoint: >
      sh -c "cp -r /etc/grafana/provisioning_temp/dashboards/. /etc/grafana/provisioning/dashboards &&
             find /etc/grafana/provisioning/dashboards/ -name '*.json' -exec sed -i 's/$${DS_PROMETHEUS}/Prometheus/g' {} \+ &&
             /run.sh"

  alys:
    container_name: alys
    restart: unless-stopped
#    build:
#      context: ../
#      dockerfile: Dockerfile
#image: localhost/alys_podman:latest
    image: ghcr.io/anduroproject/alys:development
    
    volumes:
      - ./data/alys/db/:/lib/alys/data/db
      - ./data/alys/wallet/:/lib/alys/data/wallet
    # extra_hosts:
      # - "host.containers.internal:host-gateway"
    command:
      - /bin/alys
      - --dev
#      - --aura-secret-key 0000000000000000000000000000000000000000000000000000000000000001
      - --geth-url
      - http://reth:8551/
      - --db-path
      - /lib/alys/data/db
#      - --rpc-port 3000
#      - --mine
      - --wallet-path
      - /lib/alys/data/wallet
#      - --bitcoin-secret-key 0000000000000000000000000000000000000000000000000000000000000001
      - --bitcoin-rpc-url
      - http://bitcoin-core:18443
      # - http://host.containers.internal:18443
      - --bitcoin-rpc-user
      - rpcuser
      - --bitcoin-rpc-pass
      - rpcpassword
    depends_on:
      - reth
      - bitcoin-core
    ports:
      - 3000:3000

  bitcoin-core:
    image: balajimara/bitcoin:25.99
    container_name: bitcoin_node
    restart: always
    ports:
      - 18333:18333
      - 18443:18443
    volumes:
      - ./data/bitcoin:$PWD/.bitcoin
    command:
      -printtoconsole
      -debug=1
      -regtest=1
      -fallbackfee=0.002
      -rpcallowip=0.0.0.0/0
      -rpcbind=0.0.0.0
      -server
      -rpcuser=rpcuser
      -rpcpassword=rpcpassword
      -port=18333
      -rpcport=18443

  explorer-api:
    image: web3labs/epirus-free-api:latest
    environment:
      - NODE_ENDPOINT=http://reth:8545
      - MONGO_CLIENT_URI=mongodb://mongodb:27017
      - REINDEX_ENDPOINT=http://ingestion/reindex/
      - MONGO_DB_NAME=epirus
      - MONGO_CREATE_INDICES=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - mongodb
      - reth

  mongodb:
    image: mongo:5.0.8
    environment:
      - COMPOSE_HTTP_TIMEOUT=900
      - DOCKER_CLIENT_TIMEOUT=900
    entrypoint: mongod --bind_ip "0.0.0.0"

  redis:
    image: redis
    restart: unless-stopped
    container_name: redis

  explorer-web:
    image: web3labs/epirus-free-web:latest
    environment:
      - API_URL=/api
      - WS_API_URL=ws://localhost:8090
      - DISPLAY_NETWORK_TAB=disabled
    depends_on:
      - explorer-api

  ingestion:
    image: web3labs/epirus-free-ingestion:latest
    environment:
      - NODE_ENDPOINT=http://reth:8545
      - MONGO_CLIENT_URI=mongodb://mongodb:27017
      - MONGO_DB_NAME=epirus
      - LIST_OF_METRICS_TO_CALCULATE_PER_MINUTE=hourly,daily,monthly,yearly
    depends_on:
      - mongodb
      - redis

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./5xx.html:/www/error_pages/5xx.html
    ports:
      - 8080:80
    depends_on:
      - explorer-api
      - explorer-web

volumes:
  mainnet_data:
    driver: local
  sepolia_data:
    driver: local
  holesky_data:
    driver: local
  logs:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
